name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint-and-build:
    name: Lint & Build (Node)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Debug workspace
        run: |
          echo "GITHUB_WORKSPACE = $GITHUB_WORKSPACE"
          echo "github.workspace = ${{ github.workspace }}"
          pwd
          ls -R .
      - name: Enable Corepack
        run: corepack enable

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'yarn'          # âœ… valid input for setup-node :contentReference[oaicite:3]{index=3}
          cache-dependency-path: yarn.lock
      
      - name: Prepare Yarn 4
        run: corepack prepare yarn@4.9.1 --activate

      - name: Install JS dependencies
        run: yarn install --immutable

      - name: Run ESLint
        run: yarn lint

      - name: Run TypeScript type-check
        run: yarn tsc --noEmit

      - name: Build Next.js
        run: yarn build

  python-scripts:
    name: Python Scripts (Conda)
    runs-on: ubuntu-latest
    needs: lint-and-build
    steps:
      - uses: actions/checkout@v4

      # 1. Install Miniconda & create env
      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: 'latest'
          auto-update-conda: true
          use-mamba: true
          python-version: 3.10
          environment-file: environment.yml
          activate-environment: sc-explorer   # creates & activates per README :contentReference[oaicite:4]{index=4}

      # 2. Cache Conda packages
      - name: Cache Conda packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.conda/pkgs
            ~/.conda/envs
          key: ${{ runner.os }}-conda-${{ hashFiles('environment.yml') }}
          restore-keys: |
            ${{ runner.os }}-conda-

      - name: Verify Python environment
        run: |
          python --version
          conda list

      - name: Run UMAP helper smoke test
        run: python scripts/compute_umap.py --help

      - name: Run Inference helper smoke test
        run: python scripts/run_inference.py --help

  deploy-preview:
    name: Deploy Preview
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: [ lint-and-build, python-scripts ]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Install dependencies & deploy to Vercel Preview
        run: |
          yarn install --frozen-lockfile
          npx vercel --confirm --prebuilt
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

  deploy:
    name: Deploy to Production
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [ lint-and-build, python-scripts ]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Install dependencies & deploy to Vercel
        run: |
          yarn install --frozen-lockfile
          npx vercel --prod --confirm
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
